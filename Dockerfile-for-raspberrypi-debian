# ===== STAGE 1: build (Go 1.23 + bcg729) for ARM64 with glibc =====
FROM --platform=linux/arm64 debian:bookworm-slim AS build

LABEL maintainer="Federico Pereira <fpereira@cnsoluciones.com>"
LABEL architecture="arm64"
LABEL target="raspberry-pi-os"
LABEL libc="glibc"

# Instalar dependencias para compilar bcg729
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    cmake \
    pkg-config \
    ca-certificates \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Compilar e instalar bcg729 en /usr/local
RUN git clone https://github.com/BelledonneCommunications/bcg729 /tmp/bcg729 \
 && cd /tmp/bcg729 \
 && cmake -S . -B build -DBUILD_SHARED_LIBS=ON \
 && cmake --build build --target install

# Instalar Go
RUN wget https://go.dev/dl/go1.23.0.linux-arm64.tar.gz \
 && tar -C /usr/local -xzf go1.23.0.linux-arm64.tar.gz \
 && rm go1.23.0.linux-arm64.tar.gz

# Configurar Go
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"
ENV GOCACHE="/tmp/go-cache"

# App Go
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download
COPY transcoding.go ./

# CGO habilitado para enlazar con libbcg729.so
ENV CGO_ENABLED=1
ENV GOOS=linux
ENV GOARCH=arm64
RUN go build -o /app/transcoding

# ===== STAGE 2: runtime =====
FROM --platform=linux/arm64 debian:bookworm-slim AS runtime

LABEL maintainer="Federico Pereira <fpereira@cnsoluciones.com>"
LABEL architecture="arm64"
LABEL target="raspberry-pi-os"
LABEL libc="glibc"

# Instalar dependencias m√≠nimas para runtime
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libc6 \
    && rm -rf /var/lib/apt/lists/*

# Copiamos la .so y el binario
COPY --from=build /usr/local/lib/libbcg729.so* /usr/local/lib/
COPY --from=build /app/transcoding /usr/local/bin/transcoding

WORKDIR /work
ENTRYPOINT ["/usr/local/bin/transcoding"]
